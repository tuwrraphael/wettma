{"version":3,"sources":["webpack://wettma/./src/state/requests/UpdateScoreboardAction.ts","webpack://wettma/./src/components/ScoreboardComponent/ScoreboardComponent.ts","webpack://wettma/./src/components/ScoreboardComponent/ScoreboardComponent.html"],"names":["UpdateScoreboardAction","type","ScoreboardComponent","HTMLElement","super","this","innerHTML","store","router","tableBody","querySelector","scoreboardLoadError","scoreboardRenderer","ArrayToElementRenderer","g","userId","row","document","createElement","namecol","appendChild","pointscol","abortController","AbortController","postAction","subscribe","s","update","scoreboard","e","d","children","innerText","displayName","points","toFixed","style","display","scoreboardRequest","signal","preventDefault","navigate","abort","customElements","define"],"mappings":"gMAIM,MAAOA,EACT,cACS,KAAAC,KAAI,G,wBCIX,MAAOC,UAA4BC,YAQrC,cACIC,QACAC,KAAKC,UCnBF,kgBDoBHD,KAAKE,MAAQ,kBACbF,KAAKG,OAAS,kBACdH,KAAKI,UAAYJ,KAAKK,cAAc,SACpCL,KAAKM,oBAAsBN,KAAKK,cAAc,0BAC9CL,KAAKO,mBAAqB,IAAIC,EAAA,EAAuBR,KAAKI,WACtDK,GAAKA,EAAEC,SACPD,IACI,IAAIE,EAAMC,SAASC,cAAc,MAC7BC,EAAUF,SAASC,cAAc,MACrCF,EAAII,YAAYD,GAChB,IAAIE,EAAYJ,SAASC,cAAc,MAGvC,OADAF,EAAII,YAAYC,GACTL,KAInB,oBACIX,KAAKiB,gBAAkB,IAAIC,gBAC3BlB,KAAKE,MAAMiB,WAAW,IAAIxB,GAC1BK,KAAKE,MAAMkB,WAAUC,IACjBrB,KAAKO,mBAAmBe,OAAOD,EAAEE,YAAY,CAACC,EAAGC,KACaD,EAAEE,SAAS,GAC7DC,UAAYF,EAAEG,YACsCJ,EAAEE,SAAS,GAC7DC,UAAY,GAAGF,EAAEI,OAAOC,QAAQ,QAE9C9B,KAAKM,oBAAoByB,MAAMC,QAAUX,EAAEY,mBAAqB,WAAsB,OAAS,SAChGjC,KAAKiB,gBAAgBiB,SACxB,OAAuBlC,KAAKK,cAAc,KAAM,SAASmB,IACrDA,EAAEW,iBACFnC,KAAKG,OAAOA,OAAOiC,SAAS,GAAI,YACjCpC,KAAKiB,gBAAgBiB,QAI5B,uBACIlC,KAAKiB,gBAAgBoB,SAI7BC,eAAeC,OAAO,uBAAwB1C","file":"313ac6f0e056512fbfaa.bundle.js","sourcesContent":["import { Action as Action } from \"./Action\";\nimport { ActionType as ActionType } from \"./ActionType\";\n\n\nexport class UpdateScoreboardAction implements Action {\n    constructor() { }\n    readonly type = ActionType.UpdateScoreboard;\n}\n","import { abortableEventListener } from \"../../abortable-event-listener\";\nimport { AppRouter } from \"../../app-router\";\nimport { ArrayToElementRenderer } from \"../../ArrayToElementRenderer\";\nimport { ScoreboardEntry } from \"../../models/ScoreboardEntry\";\nimport { UpdateScoreboardAction } from \"../../state/requests/UpdateScoreboardAction\";\nimport { RequestState } from \"../../state/state\";\nimport { Store } from \"../../state/store\";\nimport template from \"./ScoreboardComponent.html\";\nimport \"./ScoreboardComponent.scss\";\n\nexport class ScoreboardComponent extends HTMLElement {\n    private store: Store;\n    private abortController: AbortController;\n    private router: AppRouter;\n    private scoreboardRenderer: ArrayToElementRenderer<ScoreboardEntry, HTMLTableRowElement, string>;\n    private tableBody: HTMLTableSectionElement;\n    private scoreboardLoadError: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.store = Store.getInstance();\n        this.router = AppRouter.getInstance();\n        this.tableBody = this.querySelector(\"tbody\");\n        this.scoreboardLoadError = this.querySelector(\"#scoreboard-load-error\");\n        this.scoreboardRenderer = new ArrayToElementRenderer(this.tableBody,\n            g => g.userId,\n            g => {\n                let row = document.createElement(\"tr\");\n                let namecol = document.createElement(\"td\");\n                row.appendChild(namecol);\n                let pointscol = document.createElement(\"td\");\n\n                row.appendChild(pointscol);\n                return row;\n            });\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        this.store.postAction(new UpdateScoreboardAction());\n        this.store.subscribe(s => {\n            this.scoreboardRenderer.update(s.scoreboard, (e, d) => {\n                let nameCol: HTMLTableCellElement = <HTMLTableCellElement>e.children[0];\n                nameCol.innerText = d.displayName;\n                let pointsCol: HTMLTableCellElement = <HTMLTableCellElement>e.children[1];\n                pointsCol.innerText = `${d.points.toFixed(2)}`;\n            });\n            this.scoreboardLoadError.style.display = s.scoreboardRequest == RequestState.Failed ? \"flex\" : \"none\";\n        }, this.abortController.signal);\n        abortableEventListener(this.querySelector(\"a\"), \"click\", e => {\n            e.preventDefault();\n            this.router.router.navigate(\"\", \"wettma\");\n        }, this.abortController.signal);\n\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"scoreboard-component\", ScoreboardComponent);\n","// Module\nvar code = \"<div class=\\\"container\\\"> <section class=\\\"section\\\"> <nav class=\\\"link-section\\\"> <a href=\\\"\\\" id=\\\"back-link\\\">zur√ºck zur Startseite</a> </nav> <h2> Rangliste </h2> <div id=\\\"scoreboard-load-error\\\" class=\\\"status-msg error\\\" style=\\\"display:none\\\"> <span class=\\\"material-icons\\\" title=\\\"Tipp konnte nicht gespeichert werden\\\"> error </span> Rangliste konnte nicht geladen werden. </div> <table class=\\\"scoreboard-table\\\"> <thead> <tr> <td>Spieler/in</td> <td>Punkte</td> </tr> </thead> <tbody> </tbody> </table> </section> </div>\";\n// Exports\nexport default code;"],"sourceRoot":""}