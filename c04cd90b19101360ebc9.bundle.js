!function(){"use strict";var e;let s;!function(e){e[e.Unset=0]="Unset",e[e.InProgress=1]="InProgress",e[e.Successful=2]="Successful",e[e.Failed=3]="Failed"}(e||(e={})),s="https://wettma.azurewebsites.net";const a="https://wettma.azurewebsites.net";let t=null,n=[],i={upcomingGames:[],goToLogin:!1,goToRegister:!1,accessToken:null,displayName:null,userId:null,register:e.Unset,scoreboard:[],scoreboardRequest:e.Unset,setResultRequest:e.Unset,finishedGames:[],gameBets:{},hasMoreFinishedGames:!1},c=[];function o(e){i=e(i),self.postMessage(i)}async function d(){let e=async function(){let e=new Headers;i.accessToken&&e.append("Authorization",`Bearer ${i.accessToken.token}`),e.append("X-Frontend-Version","1"),null!=t&&e.append("X-Frontend-Standalone",t?"true":"false");let s=await fetch(`${a}/games`,{headers:e}),c=await s.json();n=c.filter((e=>e.result)).map((e=>{let s=n.find((s=>s.id==e.id));return Object.assign(Object.assign({},s),{id:e.id,team1:e.team1,team2:e.team2,time:new Date(e.time),myBet:e.myBet?{choice:e.myBet.choice,odds:{team1:e.myBet.odds.team1Odds,team2:e.myBet.odds.team2Odds,draw:e.myBet.odds.drawOdds}}:null,result:{team1Goals:e.result.team1Goals,team2Goals:e.result.team2Goals},points:e.points})})).sort(((e,s)=>+s.time-+e.time)),o((e=>{let s=n.slice(0,n.length>5?5:n.length);return Object.assign(Object.assign({},e),{upcomingGames:c.filter((e=>!e.result)).map((s=>{let a=e.upcomingGames.find((e=>e.id==s.id));return Object.assign(Object.assign({},a),{id:s.id,team1:s.team1,team2:s.team2,time:new Date(s.time),myBet:s.myBet?{choice:s.myBet.choice,odds:{team1:s.myBet.odds.team1Odds,team2:s.myBet.odds.team2Odds,draw:s.myBet.odds.drawOdds}}:null,points:s.points})})).sort(((e,s)=>+e.time-+s.time)),finishedGames:s,hasMoreFinishedGames:s.length<n.length})}))}(),s=async function(){let e=await fetch(`${a}/odds`);return c=await e.json(),c}(),[d,r]=await Promise.all([e,s]);o((e=>{let s=[...e.upcomingGames];for(let e of r){let a=s.find((s=>e.gameId==s.id));if(a&&+a.time>+new Date-3e5){let t=s.indexOf(a);s[t]=Object.assign(Object.assign({},a),{odds:{draw:e.drawOdds,id:e.id,team1:e.team1Odds,team2:e.team2Odds}})}}return Object.assign(Object.assign({},e),{upcomingGames:s})}))}function r(e,s){o((a=>{let t=[...a.upcomingGames],n=t.find((s=>e==s.id)),i=t.indexOf(n);return t[i]=Object.assign(Object.assign({},n),s),Object.assign(Object.assign({},a),{upcomingGames:t})}))}async function g(e){let s=await fetch(`${a}/user/profile`,{headers:{Authorization:`Bearer ${e.token}`}});if(401==s.status)o((s=>Object.assign(Object.assign({},s),{goToRegister:!0,accessToken:e})));else if(200==s.status){let a=await s.json();return o((s=>Object.assign(Object.assign({},s),{accessToken:e,userId:a.userId,displayName:a.displayName}))),!0}return!1}self.addEventListener("message",(s=>{(async function(s){switch(s.type){case 0:await async function(e){let s=c.find((s=>s.id==e.oddsId));r(s.gameId,{saving:!0,saveError:null}),null==i.accessToken?o((e=>Object.assign(Object.assign({},e),{goToLogin:!0}))):null==i.userId&&o((e=>Object.assign(Object.assign({},e),{goToRegister:!0})));try{let t=await fetch(`${a}/bets`,{headers:{Authorization:`Bearer ${i.accessToken.token}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify({oddsId:e.oddsId,choice:e.choice})});if(200==t.status)r(s.gameId,{myBet:{choice:e.choice,odds:{draw:s.drawOdds,team1:s.team1Odds,team2:s.team2Odds}},saving:!1});else if(400==t.status){let e=await t.json();"oddschanged"==e.type||"oddsexpired"==e.type?(r(s.gameId,{saving:!1,saveError:{oddsChanged:!0}}),await d()):"gamestarted"==e.type?(r(s.gameId,{saving:!1,saveError:{gameStarted:!0}}),await d()):r(s.gameId,{saving:!1,saveError:{unknown:!0}})}}catch(e){r(s.gameId,{saving:!1,saveError:{unknown:!0}})}}(s);break;case 1:o((e=>Object.assign(Object.assign({},e),{goToLogin:!1})));break;case 2:await async function(e){t=e.isStandalone,e.accessToken&&await g(e.accessToken),await d()}(s);break;case 3:await async function(s){o((s=>Object.assign(Object.assign({},s),{register:e.InProgress,goToRegister:!1})));try{201==(await fetch(`${a}/user/register`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify({displayName:s.displayName,token:i.accessToken.token})})).status?await g(i.accessToken)&&o((s=>Object.assign(Object.assign({},s),{register:e.Successful}))):o((s=>Object.assign(Object.assign({},s),{register:e.Failed})))}catch(s){o((s=>Object.assign(Object.assign({},s),{register:e.Failed})))}}(s);break;case 4:await async function(e){"credentials"in navigator&&"preventSilentAccess"in navigator.credentials&&navigator.credentials.preventSilentAccess(),o((e=>Object.assign(Object.assign({},e),{accessToken:null,displayName:null,userId:null}))),await d()}();break;case 5:await async function(s){o((s=>Object.assign(Object.assign({},s),{scoreboardRequest:e.InProgress})));try{let s=await fetch(`${a}/scoreboard`);if(!s.ok)return void o((s=>Object.assign(Object.assign({},s),{scoreboardRequest:e.Failed})));let t=(await s.json()).sort(((e,s)=>s.points-e.points||e.displayName.localeCompare(s.displayName))).map(((e,s)=>({displayName:e.displayName,points:e.points,userId:e.userId,place:s+1})));o((s=>Object.assign(Object.assign({},s),{scoreboardRequest:e.Successful,scoreboard:t})))}catch(s){o((s=>Object.assign(Object.assign({},s),{scoreboardRequest:e.Failed})))}}();break;case 6:await async function(s){o((s=>Object.assign(Object.assign({},s),{setResultRequest:e.InProgress})));try{(await fetch(`${a}/games/${s.gameId}/result`,{headers:{Authorization:`Bearer ${i.accessToken.token}`,"Content-Type":"application/json"},method:"PUT",body:JSON.stringify({team1Goals:s.team1Goals,team2Goals:s.team2Goals})})).ok?o((s=>Object.assign(Object.assign({},s),{setResultRequest:e.Successful}))):o((s=>Object.assign(Object.assign({},s),{setResultRequest:e.Failed})))}catch(s){o((s=>Object.assign(Object.assign({},s),{setResultRequest:e.Failed})))}}(s);break;case 7:await async function(s){o((a=>Object.assign(Object.assign({},a),{gameBets:Object.assign(Object.assign({},a.gameBets),{[s.gameId]:Object.assign(Object.assign({},a.gameBets[s.gameId]),{requestState:e.InProgress})})})));try{let t=await fetch(`${a}/games/${s.gameId}/bets`);if(!t.ok)return void o((a=>Object.assign(Object.assign({},a),{gameBets:Object.assign(Object.assign({},a.gameBets),{[s.gameId]:Object.assign(Object.assign({},a.gameBets[s.gameId]),{requestState:e.Failed})})})));let n=await t.json();o((a=>Object.assign(Object.assign({},a),{gameBets:Object.assign(Object.assign({},a.gameBets),{[s.gameId]:Object.assign(Object.assign({},a.gameBets[s.gameId]),{requestState:e.Successful,bets:n.map((e=>({displayName:e.displayName,choice:e.choice,userId:e.userId})))})})})))}catch(a){o((a=>Object.assign(Object.assign({},a),{gameBets:Object.assign(Object.assign({},a.gameBets),{[s.gameId]:Object.assign(Object.assign({},a.gameBets[s.gameId]),{requestState:e.Failed})})})))}}(s);break;case 8:await async function(){o((e=>{let s=e.finishedGames.length+10,a=n.slice(0,n.length>s?s:n.length);return Object.assign(Object.assign({},e),{finishedGames:a,hasMoreFinishedGames:a.length<n.length})}))}()}})(s.data).catch((e=>console.error(e)))}))}();
//# sourceMappingURL=c04cd90b19101360ebc9.bundle.js.map