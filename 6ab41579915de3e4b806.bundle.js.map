{"version":3,"file":"6ab41579915de3e4b806.bundle.js","mappings":"kLAIM,MAAOA,EACTC,YAAmBC,EAAuBC,EAA2BC,GAAlD,KAAAF,OAAAA,EAAuB,KAAAC,WAAAA,EAA2B,KAAAC,WAAAA,EAC5D,KAAAC,KAAO,CAD2E,E,qBCI/F,IAAIC,EAAa,IAAIC,KAAKC,eAAe,CAAC,SAAU,CAAEC,QAAS,QAASC,IAAK,UAAWC,MAAO,UAAWC,KAAM,UAAWC,OAAQ,YAE7H,MAAOC,UAA2BC,YAOpCd,cACIe,QACAC,KAAKC,UCnBF,4rBDoBHD,KAAKE,MAAQC,EAAAA,EAAAA,cACbH,KAAKI,oBAAsB,IAAIC,EAAAA,EAAgEL,KAAKM,cAAc,UAC9GC,GAAKA,EAAEC,KAAI,IAAMC,SAASC,cAAc,YAC5CV,KAAKW,WAAaX,KAAKM,cAAc,gBACrCN,KAAKY,YAAcZ,KAAKM,cAAc,mBAC1C,CAEAO,oBACIb,KAAKc,gBAAkB,IAAIC,gBAC3Bf,KAAKE,MAAMc,WAAUC,GAAKjB,KAAKkB,YAAYD,IAAIjB,KAAKc,gBAAgBK,QACpEnB,KAAKkB,YAAYlB,KAAKE,MAAMkB,QAC5BC,EAAAA,EAAAA,GAAuBrB,KAAKM,cAAc,QAAS,UAAUgB,GAAMtB,KAAKuB,aAAaD,IAAKtB,KAAKc,gBAAgBK,OACnH,CAEAI,aAAaD,GACTA,EAAGE,iBACH,IAAIC,EAAW,IAAIC,SAAS1B,KAAKM,cAAc,SAC/CN,KAAKE,MAAMyB,WAAW,IAAI5C,EAAgB6C,SAAiBH,EAASI,IAAI,SAAUD,SAAiBH,EAASI,IAAI,gBAAiBD,SAAiBH,EAASI,IAAI,iBACnK,CAEQX,YAAYD,GACZ,MAAQA,IACRjB,KAAKI,oBAAoB0B,OAAOb,EAAEc,eAAe,CAACC,EAAGC,KACjDD,EAAEE,MAAQ,GAAGD,EAAEzB,KACfwB,EAAEG,UAAY,GAAGF,EAAEG,WAAWH,EAAEI,SAAShD,EAAWiD,OAAOL,EAAEM,OAAO,IAExEvC,KAAKW,WAAW6B,MAAMC,QAAUxB,EAAEyB,kBAAoBC,EAAAA,EAAAA,OAAsB,OAAS,OACrF3C,KAAKY,YAAY4B,MAAMC,QAAUxB,EAAEyB,kBAAoBC,EAAAA,EAAAA,WAA0B,OAAS,OAElG,CAEAC,uBACI5C,KAAKc,gBAAgB+B,OACzB,EAGJC,eAAeC,OAAO,uBAAwBlD,E","sources":["webpack://wettma/./src/state/requests/SetResultAction.ts","webpack://wettma/./src/components/SetResultComponent/SetResultComponent.ts","webpack://wettma/./src/components/SetResultComponent/SetResultComponent.html"],"sourcesContent":["import { Action as Action } from \"./Action\";\nimport { ActionType as ActionType } from \"./ActionType\";\n\n\nexport class SetResultAction implements Action {\n    constructor(public gameId: number, public team1Goals: number, public team2Goals: number) { }\n    readonly type = ActionType.SetResult;\n}\n","import { abortableEventListener } from \"../../abortable-event-listener\";\nimport { ArrayToElementRenderer } from \"../../ArrayToElementRenderer\";\nimport { UpcomingGame } from \"../../models/UpcomingGame\";\nimport { SetResultAction } from \"../../state/requests/SetResultAction\";\nimport { RequestState, State } from \"../../state/state\";\nimport { Store } from \"../../state/store\";\nimport template from \"./SetResultComponent.html\";\nimport \"./SetResultComponent.scss\";\n\nlet i18nFormat = new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", day: \"2-digit\", month: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class SetResultComponent extends HTMLElement {\n    private store: Store;\n    private abortController: AbortController;\n    private gamesSelectRenderer: ArrayToElementRenderer<UpcomingGame, HTMLOptionElement, number>;\n    private saveFailed: HTMLSpanElement;\n    private saveSuccess: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.store = Store.getInstance();\n        this.gamesSelectRenderer = new ArrayToElementRenderer<UpcomingGame, HTMLOptionElement, number>(this.querySelector(\"#game\"),\n            n => n.id, () => document.createElement(\"option\"));\n        this.saveFailed = this.querySelector(\"#save-failed\");\n        this.saveSuccess = this.querySelector(\"#save-successful\");\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        this.store.subscribe(s => this.updateState(s), this.abortController.signal);\n        this.updateState(this.store.state);\n        abortableEventListener(this.querySelector(\"form\"), \"submit\", ev => this.onFormSubmit(ev), this.abortController.signal);\n    }\n\n    onFormSubmit(ev: Event) {\n        ev.preventDefault();\n        let formData = new FormData(this.querySelector(\"form\"));\n        this.store.postAction(new SetResultAction(parseInt(<string>formData.get(\"game\")), parseInt(<string>formData.get(\"team1-goals\")), parseInt(<string>formData.get(\"team2-goals\"))));\n    }\n\n    private updateState(s: State) {\n        if (null != s) {\n            this.gamesSelectRenderer.update(s.upcomingGames, (e, d) => {\n                e.value = `${d.id}`;\n                e.innerText = `${d.team1} - ${d.team2} ${i18nFormat.format(d.time)}`;\n            });\n            this.saveFailed.style.display = s.setResultRequest == RequestState.Failed ? \"flex\" : \"none\";\n            this.saveSuccess.style.display = s.setResultRequest == RequestState.Successful ? \"flex\" : \"none\";\n        }\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"set-result-component\", SetResultComponent);\n","// Module\nvar code = \"<div class=\\\"container\\\"> <section class=\\\"section\\\"> <h2> Ergebnis eintragen </h2> <form> <div> <label for=\\\"game\\\">Spiel</label> <select id=\\\"game\\\" name=\\\"game\\\" required=\\\"required\\\"></select> </div> <div> <label for=\\\"team1-goals\\\">Team1 Tore</label> <input type=\\\"number\\\" id=\\\"team1-goals\\\" name=\\\"team1-goals\\\" min=\\\"0\\\" required=\\\"required\\\"> </div> <div> <label for=\\\"team2-goals\\\">Team2 Tore</label> <input type=\\\"number\\\" id=\\\"team2-goals\\\" name=\\\"team2-goals\\\" min=\\\"0\\\" required=\\\"required\\\"> </div> <button type=\\\"submit\\\">Speichern</button> </form> <span style=\\\"display:none\\\" id=\\\"save-failed\\\">Speichern fehlgeschlagen</span> <span style=\\\"display:none\\\" id=\\\"save-successful\\\">Speichern erfolgreich</span> </section> </div>\";\n// Exports\nexport default code;"],"names":["SetResultAction","constructor","gameId","team1Goals","team2Goals","type","i18nFormat","Intl","DateTimeFormat","weekday","day","month","hour","minute","SetResultComponent","HTMLElement","super","this","innerHTML","store","Store","gamesSelectRenderer","ArrayToElementRenderer","querySelector","n","id","document","createElement","saveFailed","saveSuccess","connectedCallback","abortController","AbortController","subscribe","s","updateState","signal","state","abortableEventListener","ev","onFormSubmit","preventDefault","formData","FormData","postAction","parseInt","get","update","upcomingGames","e","d","value","innerText","team1","team2","format","time","style","display","setResultRequest","RequestState","disconnectedCallback","abort","customElements","define"],"sourceRoot":""}