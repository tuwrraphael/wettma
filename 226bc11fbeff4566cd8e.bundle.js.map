{"version":3,"file":"226bc11fbeff4566cd8e.bundle.js","mappings":"4LAIM,MAAOA,EACTC,cACS,KAAAC,KAAO,CADA,E,qBCKd,MAAOC,UAA4BC,YAQrCH,cACII,QACAC,KAAKC,UCnBF,giBDoBHD,KAAKE,MAAQC,EAAAA,EAAAA,cACbH,KAAKI,OAASC,EAAAA,EAAAA,cACdL,KAAKM,UAAYN,KAAKO,cAAc,SACpCP,KAAKQ,oBAAsBR,KAAKO,cAAc,0BAC9CP,KAAKS,mBAAqB,IAAIC,EAAAA,EAAuBV,KAAKM,WACtDK,GAAKA,EAAEC,SACPD,IACI,IAAIE,EAAMC,SAASC,cAAc,MAIjC,OAHAF,EAAIG,YAAaF,SAASC,cAAc,OACxCF,EAAIG,YAAaF,SAASC,cAAc,OACxCF,EAAIG,YAAaF,SAASC,cAAc,OACjCF,CAAG,GAEtB,CAEAI,oBACIjB,KAAKkB,gBAAkB,IAAIC,gBAC3BnB,KAAKE,MAAMkB,WAAW,IAAI1B,GAC1BM,KAAKE,MAAMmB,WAAUC,IACjBtB,KAAKS,mBAAmBc,OAAOD,EAAEE,YAAY,CAACC,EAAGC,KACcD,EAAEE,SAAS,GAC7DC,UAAY,GAAGF,EAAEG,SACgCJ,EAAEE,SAAS,GAC7DC,UAAYF,EAAEI,YACsCL,EAAEE,SAAS,GAC7DC,UAAY,GAAGF,EAAEK,OAAOC,QAAQ,IAAI,IAElDhC,KAAKQ,oBAAoByB,MAAMC,QAAUZ,EAAEa,mBAAqBC,EAAAA,EAAAA,OAAsB,OAAS,MAAM,GACtGpC,KAAKkB,gBAAgBmB,SACxBC,EAAAA,EAAAA,GAAuBtC,KAAKO,cAAc,KAAM,SAASkB,IACrDA,EAAEc,iBACFvC,KAAKI,OAAOA,OAAOoC,SAAS,GAAI,SAAS,GAC1CxC,KAAKkB,gBAAgBmB,OAE5B,CAEAI,uBACIzC,KAAKkB,gBAAgBwB,OACzB,EAGJC,eAAeC,OAAO,uBAAwB/C,E","sources":["webpack://wettma/./src/state/requests/UpdateScoreboardAction.ts","webpack://wettma/./src/components/ScoreboardComponent/ScoreboardComponent.ts","webpack://wettma/./src/components/ScoreboardComponent/ScoreboardComponent.html"],"sourcesContent":["import { Action as Action } from \"./Action\";\nimport { ActionType as ActionType } from \"./ActionType\";\n\n\nexport class UpdateScoreboardAction implements Action {\n    constructor() { }\n    readonly type = ActionType.UpdateScoreboard;\n}\n","import { abortableEventListener } from \"../../abortable-event-listener\";\nimport { AppRouter } from \"../../app-router\";\nimport { ArrayToElementRenderer } from \"../../ArrayToElementRenderer\";\nimport { ScoreboardEntry } from \"../../models/ScoreboardEntry\";\nimport { UpdateScoreboardAction } from \"../../state/requests/UpdateScoreboardAction\";\nimport { RequestState } from \"../../state/state\";\nimport { Store } from \"../../state/store\";\nimport template from \"./ScoreboardComponent.html\";\nimport \"./ScoreboardComponent.scss\";\n\nexport class ScoreboardComponent extends HTMLElement {\n    private store: Store;\n    private abortController: AbortController;\n    private router: AppRouter;\n    private scoreboardRenderer: ArrayToElementRenderer<ScoreboardEntry, HTMLTableRowElement, string>;\n    private tableBody: HTMLTableSectionElement;\n    private scoreboardLoadError: HTMLDivElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.store = Store.getInstance();\n        this.router = AppRouter.getInstance();\n        this.tableBody = this.querySelector(\"tbody\");\n        this.scoreboardLoadError = this.querySelector(\"#scoreboard-load-error\");\n        this.scoreboardRenderer = new ArrayToElementRenderer(this.tableBody,\n            g => g.userId,\n            g => {\n                let row = document.createElement(\"tr\");\n                row.appendChild( document.createElement(\"td\"));\n                row.appendChild( document.createElement(\"td\"));\n                row.appendChild( document.createElement(\"td\"));\n                return row;\n            });\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        this.store.postAction(new UpdateScoreboardAction());\n        this.store.subscribe(s => {\n            this.scoreboardRenderer.update(s.scoreboard, (e, d) => {\n                let placeCol: HTMLTableCellElement = <HTMLTableCellElement>e.children[0];\n                placeCol.innerText = `${d.place}.`;\n                let nameCol: HTMLTableCellElement = <HTMLTableCellElement>e.children[1];\n                nameCol.innerText = d.displayName;\n                let pointsCol: HTMLTableCellElement = <HTMLTableCellElement>e.children[2];\n                pointsCol.innerText = `${d.points.toFixed(2)}`;\n            });\n            this.scoreboardLoadError.style.display = s.scoreboardRequest == RequestState.Failed ? \"flex\" : \"none\";\n        }, this.abortController.signal);\n        abortableEventListener(this.querySelector(\"a\"), \"click\", e => {\n            e.preventDefault();\n            this.router.router.navigate(\"\", \"wettma\");\n        }, this.abortController.signal);\n\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"scoreboard-component\", ScoreboardComponent);\n","// Module\nvar code = \"<div class=\\\"container\\\"> <section class=\\\"section\\\"> <nav class=\\\"link-section\\\"> <a href=\\\"\\\" id=\\\"back-link\\\">zur√ºck zur Startseite</a> </nav> <h2> Rangliste </h2> <div id=\\\"scoreboard-load-error\\\" class=\\\"status-msg error\\\" style=\\\"display:none\\\"> <span class=\\\"material-icons\\\" title=\\\"Tipp konnte nicht gespeichert werden\\\"> error </span> Rangliste konnte nicht geladen werden. </div> <table class=\\\"scoreboard-table\\\"> <thead> <tr> <td title=\\\"Platzierung\\\"></td> <td>Spieler/in</td> <td>Punkte</td> </tr> </thead> <tbody> </tbody> </table> </section> </div>\";\n// Exports\nexport default code;"],"names":["UpdateScoreboardAction","constructor","type","ScoreboardComponent","HTMLElement","super","this","innerHTML","store","Store","router","AppRouter","tableBody","querySelector","scoreboardLoadError","scoreboardRenderer","ArrayToElementRenderer","g","userId","row","document","createElement","appendChild","connectedCallback","abortController","AbortController","postAction","subscribe","s","update","scoreboard","e","d","children","innerText","place","displayName","points","toFixed","style","display","scoreboardRequest","RequestState","signal","abortableEventListener","preventDefault","navigate","disconnectedCallback","abort","customElements","define"],"sourceRoot":""}