{"version":3,"file":"4b38c21fbee57563d71b.bundle.js","mappings":"sOAKM,MAAOA,EACTC,YAAmBC,GAAA,KAAAA,QAAAA,EAQV,KAAAC,KAAO,CADX,E,qBCNH,MAAOC,UAAmCC,YAO5CJ,cACIK,QANI,KAAAC,UAAW,EAOfC,KAAKC,MAAQC,EAAAA,EAAAA,aACjB,CAEAC,oBACSH,KAAKD,WACNC,KAAKD,UAAW,EAChBC,KAAKI,UCrBN,isBDsBCJ,KAAKK,WAAaL,KAAKM,cAAc,gBACrCN,KAAKO,YAAcP,KAAKM,cAAc,qBAE1CN,KAAKQ,gBAAkB,IAAIC,iBAC3BC,EAAAA,EAAAA,GAAuBV,KAAKM,cAAc,QAAS,UAAUK,UACzDC,EAAEC,iBACF,IAAIC,EAAW,IAAIC,SAASH,EAAEI,QAC9BhB,KAAKC,MAAMgB,WAAW,IAAIzB,EAAwB,CAC9C0B,WAAYC,SAASL,EAASM,IAAI,gBAClCC,aAAcC,KAAKC,MAAMT,EAASM,IAAI,oBACvC,GACJpB,KAAKQ,gBAAgBgB,QACxBxB,KAAKC,MAAMwB,WAAUC,GAAK1B,KAAK2B,YAAYD,IAAI1B,KAAKQ,gBAAgBgB,QACpExB,KAAK2B,YAAY3B,KAAKC,MAAM2B,MAChC,CAEQD,YAAYD,GACXA,IAGL1B,KAAKK,WAAWwB,MAAMC,QAAUJ,EAAEK,0BAA4BC,EAAAA,EAAAA,OAAsB,OAAS,OAC7FhC,KAAKO,YAAYsB,MAAMC,QAAUJ,EAAEK,0BAA4BC,EAAAA,EAAAA,WAA0B,OAAS,OACtG,CAEAC,uBACIjC,KAAKQ,gBAAgB0B,OACzB,EAGG,MAAMC,EAAoC,gCACjDC,eAAeC,OAAOF,EAAmCvC,E","sources":["webpack://wettma/./src/state/requests/PlaceComputerBetsAction.ts","webpack://wettma/./src/components/PlaceComputerBetsComponent/PlaceComputerBetsComponent.ts","webpack://wettma/./src/components/PlaceComputerBetsComponent/PlaceComputerBetsComponent.html"],"sourcesContent":["import { Choice } from \"../../api/models\";\nimport { Action as Action } from \"./Action\";\nimport { ActionType as ActionType } from \"./ActionType\";\n\n\nexport class PlaceComputerBetsAction implements Action {\n    constructor(public request: {\n        computerId: number;\n        computerBets: {\n            gameId: number;\n            choice: Choice;\n            reason: string;\n        }[];\n    }) { }\n    readonly type = ActionType.PlaceComputerBets;\n}\n","import { abortableEventListener } from \"../../abortable-event-listener\";\nimport { PlaceComputerBetsAction } from \"../../state/requests/PlaceComputerBetsAction\";\nimport { RequestState, State } from \"../../state/state\";\nimport { Store } from \"../../state/store\";\nimport template from \"./PlaceComputerBetsComponent.html\";\nimport \"./PlaceComputerBetsComponent.scss\";\n\nexport class PlaceComputerBetsComponent extends HTMLElement {\n\n    private rendered = false;\n    private abortController: AbortController;\n    private store: Store;\n    private saveFailed : HTMLSpanElement;\n    private saveSuccess : HTMLSpanElement;\n    constructor() {\n        super();\n        this.store = Store.getInstance();\n    }\n\n    connectedCallback() {\n        if (!this.rendered) {\n            this.rendered = true;\n            this.innerHTML = template;\n            this.saveFailed = this.querySelector(\"#save-failed\");\n            this.saveSuccess = this.querySelector(\"#save-successful\");\n        }\n        this.abortController = new AbortController();\n        abortableEventListener(this.querySelector(\"form\"), \"submit\", async (e) => {\n            e.preventDefault();\n            let formData = new FormData(e.target as HTMLFormElement);\n            this.store.postAction(new PlaceComputerBetsAction({\n                computerId: parseInt(formData.get(\"computer-id\") as string),\n                computerBets: JSON.parse(formData.get(\"computer-bets\") as string)\n            }));\n        }, this.abortController.signal);\n        this.store.subscribe(s => this.updateState(s), this.abortController.signal);\n        this.updateState(this.store.state);\n    }\n\n    private updateState(s: State) {\n        if (!s) {\n            return\n        }\n        this.saveFailed.style.display = s.placeComputerBetsRequest == RequestState.Failed ? \"flex\" : \"none\";\n        this.saveSuccess.style.display = s.placeComputerBetsRequest == RequestState.Successful ? \"flex\" : \"none\";\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\nexport const PlaceComputerBetsComponentTagName = \"place-computer-bets-component\";\ncustomElements.define(PlaceComputerBetsComponentTagName, PlaceComputerBetsComponent);\n","// Module\nvar code = \"<div class=\\\"container\\\"> <section class=\\\"section\\\"> <h2> Computerspieler Tipps Eintragen </h2> <form> <div> <label for=\\\"computer-id\\\">Computerspieler</label> <select id=\\\"computer-id\\\" name=\\\"computer-id\\\" required=\\\"required\\\"> <option value=\\\"\\\">Bitte w√§hlen</option> <option value=\\\"1\\\">Antoni Ingrid</option> <option value=\\\"2\\\">alberto</option> </select> </div> <div> <textarea id=\\\"computer-bets\\\" name=\\\"computer-bets\\\" placeholder=\\\"Paste computer bets here\\\" required=\\\"required\\\"></textarea> </div> <button type=\\\"submit\\\">Submit</button> </form> <span style=\\\"display:none\\\" id=\\\"save-failed\\\">Speichern fehlgeschlagen</span> <span style=\\\"display:none\\\" id=\\\"save-successful\\\">Speichern erfolgreich</span> </section> </div>\";\n// Exports\nexport default code;"],"names":["PlaceComputerBetsAction","constructor","request","type","PlaceComputerBetsComponent","HTMLElement","super","rendered","this","store","Store","connectedCallback","innerHTML","saveFailed","querySelector","saveSuccess","abortController","AbortController","abortableEventListener","async","e","preventDefault","formData","FormData","target","postAction","computerId","parseInt","get","computerBets","JSON","parse","signal","subscribe","s","updateState","state","style","display","placeComputerBetsRequest","RequestState","disconnectedCallback","abort","PlaceComputerBetsComponentTagName","customElements","define"],"sourceRoot":""}