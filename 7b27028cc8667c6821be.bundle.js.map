{"version":3,"file":"7b27028cc8667c6821be.bundle.js","mappings":"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","sources":["webpack://wettma/./src/ArrayToElementRenderer.ts","webpack://wettma/./src/state/requests/SetResultAction.ts","webpack://wettma/./src/components/SetResultComponent/SetResultComponent.ts","webpack://wettma/./src/components/SetResultComponent/SetResultComponent.html"],"sourcesContent":["export class ArrayToElementRenderer<T, E extends Element, K>{\n    private keyToElement: Map<K, E>;\n    private elementToKey: WeakMap<E, K>;\n    \n    constructor(private listElement: HTMLElement,\n        private keySelector: (x: T) => K,\n        private createElement: (x: T) => E) {\n        this.keyToElement = new Map<K, E>();\n        this.elementToKey = new WeakMap<E, K>();\n    }\n\n    update(list: T[], updateElement: (x: E, data: T) => void) {\n        let keyCache = new Map<T, K>();\n        let getKey = (d: T) => keyCache.get(d) || (() => {\n            let key = this.keySelector(d);\n            keyCache.set(d, key);\n            return key;\n        })();\n        for (let x of Array.from(this.listElement.children)) {\n            let el: E = <E>x;\n            let data = list.find(i => this.elementToKey.get(el) == getKey(i));\n            if (data) {\n                updateElement(<E>el, data);\n            }\n            else {\n                this.listElement.removeChild(el);\n            }\n        }\n        let before: Element = null;\n        let nextKeyToElement = new Map<K, E>();\n        for (let t of list) {\n            let key = getKey(t);\n            let childElement: E = this.keyToElement.get(key);\n            if (!childElement) {\n                childElement = this.createElement(t);\n                updateElement(childElement, t);\n                this.elementToKey.set(childElement, key);\n            }\n            nextKeyToElement.set(key, childElement);\n            if (null == before && childElement != this.listElement.firstElementChild) {\n                this.listElement.prepend(childElement);\n            }\n            else if (null != before && before.nextElementSibling != childElement) {\n                before.insertAdjacentElement(\"afterend\", childElement);\n            }\n            before = childElement;\n        }\n        this.keyToElement = nextKeyToElement;\n    }\n\n}","import { Action as Action } from \"./Action\";\nimport { ActionType as ActionType } from \"./ActionType\";\n\n\nexport class SetResultAction implements Action {\n    constructor(public gameId: number, public team1Goals: number, public team2Goals: number) { }\n    readonly type = ActionType.SetResult;\n}\n","import { abortableEventListener } from \"../../abortable-event-listener\";\nimport { ArrayToElementRenderer } from \"../../ArrayToElementRenderer\";\nimport { UpcomingGame } from \"../../models/UpcomingGame\";\nimport { SetResultAction } from \"../../state/requests/SetResultAction\";\nimport { RequestState, State } from \"../../state/state\";\nimport { Store } from \"../../state/store\";\nimport template from \"./SetResultComponent.html\";\nimport \"./SetResultComponent.scss\";\n\nlet i18nFormat = new Intl.DateTimeFormat([\"de-AT\"], { weekday: \"short\", day: \"2-digit\", month: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\" });\n\nexport class SetResultComponent extends HTMLElement {\n    private store: Store;\n    private abortController: AbortController;\n    private gamesSelectRenderer: ArrayToElementRenderer<UpcomingGame, HTMLOptionElement, number>;\n    private saveFailed: HTMLSpanElement;\n    private saveSuccess: HTMLSpanElement;\n\n    constructor() {\n        super();\n        this.innerHTML = template;\n        this.store = Store.getInstance();\n        this.gamesSelectRenderer = new ArrayToElementRenderer<UpcomingGame, HTMLOptionElement, number>(this.querySelector(\"#game\"),\n            n => n.id, () => document.createElement(\"option\"));\n        this.saveFailed = this.querySelector(\"#save-failed\");\n        this.saveSuccess = this.querySelector(\"#save-successful\");\n    }\n\n    connectedCallback() {\n        this.abortController = new AbortController();\n        this.store.subscribe(s => this.updateState(s), this.abortController.signal);\n        this.updateState(this.store.state);\n        abortableEventListener(this.querySelector(\"form\"), \"submit\", ev => this.onFormSubmit(ev), this.abortController.signal);\n    }\n\n    onFormSubmit(ev: Event) {\n        ev.preventDefault();\n        let formData = new FormData(this.querySelector(\"form\"));\n        this.store.postAction(new SetResultAction(parseInt(<string>formData.get(\"game\")), parseInt(<string>formData.get(\"team1-goals\")), parseInt(<string>formData.get(\"team2-goals\"))));\n    }\n\n    private updateState(s: State) {\n        if (null != s) {\n            this.gamesSelectRenderer.update(s.upcomingGames, (e, d) => {\n                e.value = `${d.id}`;\n                e.innerText = `${d.team1} - ${d.team2} ${i18nFormat.format(d.time)}`;\n            });\n            this.saveFailed.style.display = s.setResultRequest == RequestState.Failed ? \"flex\" : \"none\";\n            this.saveSuccess.style.display = s.setResultRequest == RequestState.Successful ? \"flex\" : \"none\";\n        }\n    }\n\n    disconnectedCallback() {\n        this.abortController.abort();\n    }\n}\n\ncustomElements.define(\"set-result-component\", SetResultComponent);\n","// Module\nvar code = \"<div class=\\\"container\\\"> <section class=\\\"section\\\"> <h2> Ergebnis eintragen </h2> <form> <div> <label for=\\\"game\\\">Spiel</label> <select id=\\\"game\\\" name=\\\"game\\\" required=\\\"required\\\"></select> </div> <div> <label for=\\\"team1-goals\\\">Team1 Tore</label> <input type=\\\"number\\\" id=\\\"team1-goals\\\" name=\\\"team1-goals\\\" min=\\\"0\\\" required=\\\"required\\\"> </div> <div> <label for=\\\"team2-goals\\\">Team2 Tore</label> <input type=\\\"number\\\" id=\\\"team2-goals\\\" name=\\\"team2-goals\\\" min=\\\"0\\\" required=\\\"required\\\"> </div> <button type=\\\"submit\\\">Speichern</button> </form> <span style=\\\"display:none\\\" id=\\\"save-failed\\\">Speichern fehlgeschlagen</span> <span style=\\\"display:none\\\" id=\\\"save-successful\\\">Speichern erfolgreich</span> </section> </div>\";\n// Exports\nexport default code;"],"names":["ArrayToElementRenderer","constructor","listElement","keySelector","createElement","this","keyToElement","Map","elementToKey","WeakMap","update","list","updateElement","keyCache","getKey","d","get","key","set","x","Array","from","children","el","data","find","i","removeChild","before","nextKeyToElement","t","childElement","firstElementChild","prepend","nextElementSibling","insertAdjacentElement","SetResultAction","gameId","team1Goals","team2Goals","type","i18nFormat","Intl","DateTimeFormat","weekday","day","month","hour","minute","SetResultComponent","HTMLElement","super","innerHTML","store","Store","gamesSelectRenderer","querySelector","n","id","document","saveFailed","saveSuccess","connectedCallback","abortController","AbortController","subscribe","s","updateState","signal","state","abortableEventListener","ev","onFormSubmit","preventDefault","formData","FormData","postAction","parseInt","upcomingGames","e","value","innerText","team1","team2","format","time","style","display","setResultRequest","RequestState","disconnectedCallback","abort","customElements","define"],"sourceRoot":""}